---
import Navbar from '../components/Navbar.astro';
---


<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8" />
        <meta name="description" content="Astro description" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/png" href="/logo.png" />
        <meta name="generator" content={Astro.generator} />
        <title id="page-title">Loading...</title>
    </head>
    <body>
        <Navbar />
        <div class="article-container">
            <div class="title-container">
                <div style="width: 80%">
                    <h1 id="article-title">Loading...</h1>
                </div>
            </div>
            <div class="info-container">
                <img id="article-image" src="/logo.png" class="article-image" style="display: none;" />
                <div style="margin-top: -35px;">
                    <p id="article-description" class="article-description">Loading...</p>
                    <div class="author-credits">
                        <p>By: Zain Javaid</p>
                    </div>
                </div>
            </div>
            <div class="content-container">
                <p id="content"></p>
            </div>
        </div>
        <script>
            document.addEventListener('DOMContentLoaded', async () => {
                function getQueryParams() {
                    const params = new URLSearchParams(window.location.search);
                    return Object.fromEntries(params.entries());
                }

                const { post } = getQueryParams();

                if (post) {
                    try {
                        const response = await fetch(`http://localhost:5000/get-article/${post}`);
                        if (response.ok) {
                            const data = await response.json();
                            const articleData = data.articles[0];

                            if (articleData) {
                                const article = {
                                    id: articleData[0],
                                    title: articleData[1],
                                    description: articleData[2],
                                    content: articleData[3],
                                    slug: articleData[4],
                                    image_source: articleData[5],
                                    date: articleData[6]
                                };

                                document.getElementById('page-title').textContent = article.title;
                                document.getElementById('article-title').textContent = article.title;
                                document.getElementById('article-description').textContent = article.description;
                                document.getElementById('article-image').src = `http://localhost:5000/${article.image_source}`;
                                document.getElementById('article-image').style.display = "inline-block";
                                document.getElementById('content').innerHTML = article.content.replace(/\r\n|\n/g, '<br>');
                            } else {
                                console.error('Article not found.');
                            }
                        } else {
                            console.error('Failed to fetch article:', response.statusText);
                        }
                    } catch (error) {
                        console.error('Error fetching article:', error);
                    }
                } else {
                    console.error('No article ID found in query parameters.');
                }
            });
        </script>
    </body>
</html>

<style is:global>
    html {
        font-family: system-ui, sans-serif;
        background: #fff;
        overflow-x: hidden;
        margin: 0;
        padding: 0;
    }

    code {
        font-family:
            Menlo,
            Monaco,
            Lucida Console,
            Liberation Mono,
            DejaVu Sans Mono,
            Bitstream Vera Sans Mono,
            Courier New,
            monospace;
    }

    br {
        display: block;
        content: "";
        margin-top: 30px;
    }

    .article-container {
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
        margin-top: 100px;
    }

    .title-container {
        width: 70vw;
        justify-content: start;
    }

    #article-title {
        font-size: 45px;
    }

    .info-container {
        display: flex;
        flex-direction: row;
        width: 100%;
        column-gap: 40px;
    }

    .article-image {
        width: 55%;
    }

    .article-description {
        font-size: 31px;
        font-weight: 300;
    }

    .author-credits {
        position: fixed;
        font-size: 16px;
    }

    .content-container {
        position: absolute;
        margin-top: 35px;
        font-size: 18px;
        line-height: 1.3;
        width: 75%;
        left: 50%;
        transform: translateX(-50%);
        padding-bottom: 100px;
    }
</style>