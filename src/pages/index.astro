---
import Article from '../components/Article.astro'
import HeadlineArticle from '../components/HeadlineArticle.astro';

interface Article {
    id: number;
    title: string;
    description: string;
    content: string;
    slug: string;
    image: string;
    date: string;
}

let articles: Article[] = [];
try {
    const response = await fetch(`${import.meta.env.PUBLIC_BACKEND_URL}/get-articles`);
    if (response.ok) {
        const data = await response.json();
        articles = data.articles.map((article: any) => ({
            id: article[0],
            title: article[1],
            description: article[2],
            content: article[3],
            tags: article[4],
            slug: article[5],
            image: article[6],
            credits: article[7],
            date: article[8]
        }));
    } else {
        console.error('Failed to fetch articles:', response.statusText);
    }
} catch (error) {
    console.error('Error fetching articles:', error);
}
---

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="description" content="Astro description" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/png" href="/logo.png" />
        <meta name="generator" content={Astro.generator} />
        <title>Zain Blog</title>
    </head>
    <body>
        <div id="top-wrapper">
            <div id="top-content-container">
                <div id="headline-article-container">
                    <HeadlineArticle slug={articles[0].slug} title={articles[0].title} description={articles[0].description} image={articles[0].image}/>
                </div>
                <div id="side-article-container">
                    {articles.slice(1, 4).map((article) => (
                        <Article slug={article.slug} title={article.title} description={article.description} image={article.image} />
                    ))}
                </div>
            </div>
        </div>
        <div id="archive-content-container">
            {articles.slice(4).map((article) => (
                <Article slug={article.slug} title={article.title} description={article.description} image={article.image} />
            ))}
        </div>
        <script>
            document.addEventListener('DOMContentLoaded', async () => {
                fetch(`${import.meta.env.PUBLIC_BACKEND_URL}/analytics/new-page-view/home`)
                    .then(response => {
                        if (!response.ok) {
                            console.error('Failed to record page view:', response.statusText);
                        }
                    })
                    .catch(error => console.error('Error in recording page view:', error));
            });
        </script>
    </body>
</html>

<style is:global>
    #top-wrapper {
        display: flex;
        justify-content: center;
        margin: 120px 0 50px 0;
    }

    #top-content-container {
        display: flex;
        flex-direction: row;
        column-gap: 25px;
    }

	#side-article-container {
		display: flex;
		flex-direction: column;
		row-gap: 10px;
	}

    #archive-content-container {
        display: flex;
        flex-direction: column;
        row-gap: 10px;
        align-items: center;
    }
</style>
